ENV_RUN := conda run -n ad-prediction

.PHONY: help \
        setup \
        create_env \
        install_hooks \
        install_requirements \
        lint_staged \
        lint_all \
        clean \
        download_data

help:
	@echo
	@echo "AD Prediction Makefile"
	@echo
	@echo "Usage:"
	@echo
	@echo "ENVIRONMENT MANAGEMENT"
	@echo "======================="
	@echo
	@echo "  setup          Creates and configures the conda environment:"
	@echo "                 - Installs packages from environment.yml"
	@echo "                 - Installs git commit hooks"
	@echo
	@echo "  download_data  Downloads the count and reference data from the source repository"
	@echo
	@echo "  clean          Cleans autogenerated files like cache"
	@echo
	@echo "LINTING"
	@echo "======="
	@echo
	@echo "  lint_staged    Lints files staged for commit"
	@echo
	@echo "  lint_all       Lints all files"
	@echo

download_data:
	@echo "Downloading counts data..."
	@git clone https://github.com/Zhong-Lab-UCSD/AD_prediction_blood data || { echo "Failed to download data"; exit 1; }
	@echo "Downloading gene annotation data..."
	@mkdir -p ref  # Ensure the ref directory exists
	@curl -o ref/Homo_sapiens.GRCh38.84.chr.gtf.gz http://ftp.ensembl.org/pub/release-84/gtf/homo_sapiens/Homo_sapiens.GRCh38.84.chr.gtf.gz || { echo "Failed to download GTF file"; exit 1; }
	@echo "Unzipping..."
	@gunzip -f ref/Homo_sapiens.GRCh38.84.chr.gtf.gz || { echo "Failed to unzip GTF file"; exit 1; }
	@echo "Data downloaded successfully..."

setup:
	@echo "Setting up the repo..."
	$(MAKE) download_data
	$(MAKE) create_env
	$(ENV_RUN) $(MAKE) install_hooks

create_env:
	@echo "Creating environment from environment.yml..."
	@command -v mamba >/dev/null 2>&1 && \
		(echo "Using mamba to create environment"; mamba env create -f environment.yml) || \
		(echo "Mamba not found, using conda instead"; conda env create -f environment.yml) || \
		{ echo "Failed to create environment"; exit 1; }

install_hooks:
	@echo "Installing precommit hooks..."
	@pre-commit install
	@pre-commit install --hook-type commit-msg

clean:
	@echo "Cleaning files..."
	@rm -rf .mypy_cache *.egg_info

lint_staged:
	@echo "Linting staged files..."
	@pre-commit run

lint_all:
	@echo "Linting all files..."
	@pre-commit run --all-files